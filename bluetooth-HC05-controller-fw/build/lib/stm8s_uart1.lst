                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 3.6.0 #9615 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module stm8s_uart1
                                      6 	.optsdcc -mstm8
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _CLK_GetClockFreq
                                     12 	.globl _UART1_DeInit
                                     13 	.globl _UART1_Init
                                     14 	.globl _UART1_Cmd
                                     15 	.globl _UART1_ITConfig
                                     16 	.globl _UART1_HalfDuplexCmd
                                     17 	.globl _UART1_IrDAConfig
                                     18 	.globl _UART1_IrDACmd
                                     19 	.globl _UART1_LINBreakDetectionConfig
                                     20 	.globl _UART1_LINCmd
                                     21 	.globl _UART1_SmartCardCmd
                                     22 	.globl _UART1_SmartCardNACKCmd
                                     23 	.globl _UART1_WakeUpConfig
                                     24 	.globl _UART1_ReceiverWakeUpCmd
                                     25 	.globl _UART1_ReceiveData8
                                     26 	.globl _UART1_ReceiveData9
                                     27 	.globl _UART1_SendData8
                                     28 	.globl _UART1_SendData9
                                     29 	.globl _UART1_SendBreak
                                     30 	.globl _UART1_SetAddress
                                     31 	.globl _UART1_SetGuardTime
                                     32 	.globl _UART1_SetPrescaler
                                     33 	.globl _UART1_GetFlagStatus
                                     34 	.globl _UART1_ClearFlag
                                     35 	.globl _UART1_GetITStatus
                                     36 	.globl _UART1_ClearITPendingBit
                                     37 ;--------------------------------------------------------
                                     38 ; ram data
                                     39 ;--------------------------------------------------------
                                     40 	.area DATA
                                     41 ;--------------------------------------------------------
                                     42 ; ram data
                                     43 ;--------------------------------------------------------
                                     44 	.area INITIALIZED
                                     45 ;--------------------------------------------------------
                                     46 ; absolute external ram data
                                     47 ;--------------------------------------------------------
                                     48 	.area DABS (ABS)
                                     49 ;--------------------------------------------------------
                                     50 ; global & static initialisations
                                     51 ;--------------------------------------------------------
                                     52 	.area HOME
                                     53 	.area GSINIT
                                     54 	.area GSFINAL
                                     55 	.area GSINIT
                                     56 ;--------------------------------------------------------
                                     57 ; Home
                                     58 ;--------------------------------------------------------
                                     59 	.area HOME
                                     60 	.area HOME
                                     61 ;--------------------------------------------------------
                                     62 ; code
                                     63 ;--------------------------------------------------------
                                     64 	.area CODE
                                     65 ;	lib/stm8s_uart1.c: 19: void UART1_DeInit(void)
                                     66 ;	-----------------------------------------
                                     67 ;	 function UART1_DeInit
                                     68 ;	-----------------------------------------
      000000                         69 _UART1_DeInit:
                                     70 ;	lib/stm8s_uart1.c: 23: (void)UART1->SR;
      000000 AE 52 30         [ 2]   71 	ldw	x, #0x5230
      000003 F6               [ 1]   72 	ld	a, (x)
                                     73 ;	lib/stm8s_uart1.c: 24: (void)UART1->DR;
      000004 AE 52 31         [ 2]   74 	ldw	x, #0x5231
      000007 F6               [ 1]   75 	ld	a, (x)
                                     76 ;	lib/stm8s_uart1.c: 26: UART1->BRR2 = UART1_BRR2_RESET_VALUE;  /* Set UART1_BRR2 to reset value 0x00 */
      000008 35 00 52 33      [ 1]   77 	mov	0x5233+0, #0x00
                                     78 ;	lib/stm8s_uart1.c: 27: UART1->BRR1 = UART1_BRR1_RESET_VALUE;  /* Set UART1_BRR1 to reset value 0x00 */
      00000C 35 00 52 32      [ 1]   79 	mov	0x5232+0, #0x00
                                     80 ;	lib/stm8s_uart1.c: 29: UART1->CR1 = UART1_CR1_RESET_VALUE;  /* Set UART1_CR1 to reset value 0x00 */
      000010 35 00 52 34      [ 1]   81 	mov	0x5234+0, #0x00
                                     82 ;	lib/stm8s_uart1.c: 30: UART1->CR2 = UART1_CR2_RESET_VALUE;  /* Set UART1_CR2 to reset value 0x00 */
      000014 35 00 52 35      [ 1]   83 	mov	0x5235+0, #0x00
                                     84 ;	lib/stm8s_uart1.c: 31: UART1->CR3 = UART1_CR3_RESET_VALUE;  /* Set UART1_CR3 to reset value 0x00 */
      000018 35 00 52 36      [ 1]   85 	mov	0x5236+0, #0x00
                                     86 ;	lib/stm8s_uart1.c: 32: UART1->CR4 = UART1_CR4_RESET_VALUE;  /* Set UART1_CR4 to reset value 0x00 */
      00001C 35 00 52 37      [ 1]   87 	mov	0x5237+0, #0x00
                                     88 ;	lib/stm8s_uart1.c: 33: UART1->CR5 = UART1_CR5_RESET_VALUE;  /* Set UART1_CR5 to reset value 0x00 */
      000020 35 00 52 38      [ 1]   89 	mov	0x5238+0, #0x00
                                     90 ;	lib/stm8s_uart1.c: 35: UART1->GTR = UART1_GTR_RESET_VALUE;
      000024 35 00 52 39      [ 1]   91 	mov	0x5239+0, #0x00
                                     92 ;	lib/stm8s_uart1.c: 36: UART1->PSCR = UART1_PSCR_RESET_VALUE;
      000028 35 00 52 3A      [ 1]   93 	mov	0x523a+0, #0x00
      00002C 81               [ 4]   94 	ret
                                     95 ;	lib/stm8s_uart1.c: 56: void UART1_Init(uint32_t BaudRate, UART1_WordLength_TypeDef WordLength, 
                                     96 ;	-----------------------------------------
                                     97 ;	 function UART1_Init
                                     98 ;	-----------------------------------------
      00002D                         99 _UART1_Init:
      00002D 52 25            [ 2]  100 	sub	sp, #37
                                    101 ;	lib/stm8s_uart1.c: 63: UART1->CR1 &= (uint8_t)(~UART1_CR1_M);  
      00002F AE 52 34         [ 2]  102 	ldw	x, #0x5234
      000032 F6               [ 1]  103 	ld	a, (x)
      000033 A4 EF            [ 1]  104 	and	a, #0xef
      000035 F7               [ 1]  105 	ld	(x), a
                                    106 ;	lib/stm8s_uart1.c: 66: UART1->CR1 |= (uint8_t)WordLength;
      000036 AE 52 34         [ 2]  107 	ldw	x, #0x5234
      000039 F6               [ 1]  108 	ld	a, (x)
      00003A 1A 2C            [ 1]  109 	or	a, (0x2c, sp)
      00003C AE 52 34         [ 2]  110 	ldw	x, #0x5234
      00003F F7               [ 1]  111 	ld	(x), a
                                    112 ;	lib/stm8s_uart1.c: 69: UART1->CR3 &= (uint8_t)(~UART1_CR3_STOP);  
      000040 AE 52 36         [ 2]  113 	ldw	x, #0x5236
      000043 F6               [ 1]  114 	ld	a, (x)
      000044 A4 CF            [ 1]  115 	and	a, #0xcf
      000046 F7               [ 1]  116 	ld	(x), a
                                    117 ;	lib/stm8s_uart1.c: 71: UART1->CR3 |= (uint8_t)StopBits;  
      000047 AE 52 36         [ 2]  118 	ldw	x, #0x5236
      00004A F6               [ 1]  119 	ld	a, (x)
      00004B 1A 2D            [ 1]  120 	or	a, (0x2d, sp)
      00004D AE 52 36         [ 2]  121 	ldw	x, #0x5236
      000050 F7               [ 1]  122 	ld	(x), a
                                    123 ;	lib/stm8s_uart1.c: 74: UART1->CR1 &= (uint8_t)(~(UART1_CR1_PCEN | UART1_CR1_PS  ));  
      000051 AE 52 34         [ 2]  124 	ldw	x, #0x5234
      000054 F6               [ 1]  125 	ld	a, (x)
      000055 A4 F9            [ 1]  126 	and	a, #0xf9
      000057 F7               [ 1]  127 	ld	(x), a
                                    128 ;	lib/stm8s_uart1.c: 76: UART1->CR1 |= (uint8_t)Parity;  
      000058 AE 52 34         [ 2]  129 	ldw	x, #0x5234
      00005B F6               [ 1]  130 	ld	a, (x)
      00005C 1A 2E            [ 1]  131 	or	a, (0x2e, sp)
      00005E AE 52 34         [ 2]  132 	ldw	x, #0x5234
      000061 F7               [ 1]  133 	ld	(x), a
                                    134 ;	lib/stm8s_uart1.c: 79: UART1->BRR1 &= (uint8_t)(~UART1_BRR1_DIVM);  
      000062 AE 52 32         [ 2]  135 	ldw	x, #0x5232
      000065 F6               [ 1]  136 	ld	a, (x)
      000066 35 00 52 32      [ 1]  137 	mov	0x5232+0, #0x00
                                    138 ;	lib/stm8s_uart1.c: 81: UART1->BRR2 &= (uint8_t)(~UART1_BRR2_DIVM);  
      00006A AE 52 33         [ 2]  139 	ldw	x, #0x5233
      00006D F6               [ 1]  140 	ld	a, (x)
      00006E A4 0F            [ 1]  141 	and	a, #0x0f
      000070 F7               [ 1]  142 	ld	(x), a
                                    143 ;	lib/stm8s_uart1.c: 83: UART1->BRR2 &= (uint8_t)(~UART1_BRR2_DIVF);  
      000071 AE 52 33         [ 2]  144 	ldw	x, #0x5233
      000074 F6               [ 1]  145 	ld	a, (x)
      000075 A4 F0            [ 1]  146 	and	a, #0xf0
      000077 F7               [ 1]  147 	ld	(x), a
                                    148 ;	lib/stm8s_uart1.c: 86: BaudRate_Mantissa    = ((uint32_t)CLK_GetClockFreq() / (BaudRate << 4));
      000078 CDr00r00         [ 4]  149 	call	_CLK_GetClockFreq
      00007B 1F 1A            [ 2]  150 	ldw	(0x1a, sp), x
      00007D 1E 28            [ 2]  151 	ldw	x, (0x28, sp)
      00007F 1F 11            [ 2]  152 	ldw	(0x11, sp), x
      000081 1E 2A            [ 2]  153 	ldw	x, (0x2a, sp)
      000083 A6 04            [ 1]  154 	ld	a, #0x04
      000085                        155 00124$:
      000085 58               [ 2]  156 	sllw	x
      000086 09 12            [ 1]  157 	rlc	(0x12, sp)
      000088 09 11            [ 1]  158 	rlc	(0x11, sp)
      00008A 4A               [ 1]  159 	dec	a
      00008B 26 F8            [ 1]  160 	jrne	00124$
      00008D 1F 13            [ 2]  161 	ldw	(0x13, sp), x
      00008F 1E 13            [ 2]  162 	ldw	x, (0x13, sp)
      000091 89               [ 2]  163 	pushw	x
      000092 1E 13            [ 2]  164 	ldw	x, (0x13, sp)
      000094 89               [ 2]  165 	pushw	x
      000095 1E 1E            [ 2]  166 	ldw	x, (0x1e, sp)
      000097 89               [ 2]  167 	pushw	x
      000098 90 89            [ 2]  168 	pushw	y
      00009A CDr00r00         [ 4]  169 	call	__divulong
      00009D 5B 08            [ 2]  170 	addw	sp, #8
      00009F 1F 07            [ 2]  171 	ldw	(0x07, sp), x
      0000A1 17 05            [ 2]  172 	ldw	(0x05, sp), y
                                    173 ;	lib/stm8s_uart1.c: 87: BaudRate_Mantissa100 = (((uint32_t)CLK_GetClockFreq() * 100) / (BaudRate << 4));
      0000A3 CDr00r00         [ 4]  174 	call	_CLK_GetClockFreq
      0000A6 89               [ 2]  175 	pushw	x
      0000A7 90 89            [ 2]  176 	pushw	y
      0000A9 4B 64            [ 1]  177 	push	#0x64
      0000AB 5F               [ 1]  178 	clrw	x
      0000AC 89               [ 2]  179 	pushw	x
      0000AD 4B 00            [ 1]  180 	push	#0x00
      0000AF CDr00r00         [ 4]  181 	call	__mullong
      0000B2 5B 08            [ 2]  182 	addw	sp, #8
      0000B4 1F 1E            [ 2]  183 	ldw	(0x1e, sp), x
      0000B6 1E 13            [ 2]  184 	ldw	x, (0x13, sp)
      0000B8 89               [ 2]  185 	pushw	x
      0000B9 1E 13            [ 2]  186 	ldw	x, (0x13, sp)
      0000BB 89               [ 2]  187 	pushw	x
      0000BC 1E 22            [ 2]  188 	ldw	x, (0x22, sp)
      0000BE 89               [ 2]  189 	pushw	x
      0000BF 90 89            [ 2]  190 	pushw	y
      0000C1 CDr00r00         [ 4]  191 	call	__divulong
      0000C4 5B 08            [ 2]  192 	addw	sp, #8
      0000C6 1F 03            [ 2]  193 	ldw	(0x03, sp), x
      0000C8 17 01            [ 2]  194 	ldw	(0x01, sp), y
                                    195 ;	lib/stm8s_uart1.c: 89: UART1->BRR2 |= (uint8_t)((uint8_t)(((BaudRate_Mantissa100 - (BaudRate_Mantissa * 100)) << 4) / 100) & (uint8_t)0x0F); 
      0000CA AE 52 33         [ 2]  196 	ldw	x, #0x5233
      0000CD F6               [ 1]  197 	ld	a, (x)
      0000CE 6B 16            [ 1]  198 	ld	(0x16, sp), a
      0000D0 1E 07            [ 2]  199 	ldw	x, (0x07, sp)
      0000D2 89               [ 2]  200 	pushw	x
      0000D3 1E 07            [ 2]  201 	ldw	x, (0x07, sp)
      0000D5 89               [ 2]  202 	pushw	x
      0000D6 4B 64            [ 1]  203 	push	#0x64
      0000D8 5F               [ 1]  204 	clrw	x
      0000D9 89               [ 2]  205 	pushw	x
      0000DA 4B 00            [ 1]  206 	push	#0x00
      0000DC CDr00r00         [ 4]  207 	call	__mullong
      0000DF 5B 08            [ 2]  208 	addw	sp, #8
      0000E1 1F 0F            [ 2]  209 	ldw	(0x0f, sp), x
      0000E3 17 0D            [ 2]  210 	ldw	(0x0d, sp), y
      0000E5 1E 03            [ 2]  211 	ldw	x, (0x03, sp)
      0000E7 72 F0 0F         [ 2]  212 	subw	x, (0x0f, sp)
      0000EA 1F 0B            [ 2]  213 	ldw	(0x0b, sp), x
      0000EC 7B 02            [ 1]  214 	ld	a, (0x02, sp)
      0000EE 12 0E            [ 1]  215 	sbc	a, (0x0e, sp)
      0000F0 6B 0A            [ 1]  216 	ld	(0x0a, sp), a
      0000F2 7B 01            [ 1]  217 	ld	a, (0x01, sp)
      0000F4 12 0D            [ 1]  218 	sbc	a, (0x0d, sp)
      0000F6 6B 09            [ 1]  219 	ld	(0x09, sp), a
      0000F8 1E 0B            [ 2]  220 	ldw	x, (0x0b, sp)
      0000FA 16 09            [ 2]  221 	ldw	y, (0x09, sp)
      0000FC A6 04            [ 1]  222 	ld	a, #0x04
      0000FE                        223 00126$:
      0000FE 58               [ 2]  224 	sllw	x
      0000FF 90 59            [ 2]  225 	rlcw	y
      000101 4A               [ 1]  226 	dec	a
      000102 26 FA            [ 1]  227 	jrne	00126$
      000104 4B 64            [ 1]  228 	push	#0x64
      000106 4B 00            [ 1]  229 	push	#0x00
      000108 4B 00            [ 1]  230 	push	#0x00
      00010A 4B 00            [ 1]  231 	push	#0x00
      00010C 89               [ 2]  232 	pushw	x
      00010D 90 89            [ 2]  233 	pushw	y
      00010F CDr00r00         [ 4]  234 	call	__divulong
      000112 5B 08            [ 2]  235 	addw	sp, #8
      000114 9F               [ 1]  236 	ld	a, xl
      000115 A4 0F            [ 1]  237 	and	a, #0x0f
      000117 1A 16            [ 1]  238 	or	a, (0x16, sp)
      000119 AE 52 33         [ 2]  239 	ldw	x, #0x5233
      00011C F7               [ 1]  240 	ld	(x), a
                                    241 ;	lib/stm8s_uart1.c: 91: UART1->BRR2 |= (uint8_t)((BaudRate_Mantissa >> 4) & (uint8_t)0xF0); 
      00011D AE 52 33         [ 2]  242 	ldw	x, #0x5233
      000120 F6               [ 1]  243 	ld	a, (x)
      000121 6B 17            [ 1]  244 	ld	(0x17, sp), a
      000123 1E 07            [ 2]  245 	ldw	x, (0x07, sp)
      000125 16 05            [ 2]  246 	ldw	y, (0x05, sp)
      000127 90 54            [ 2]  247 	srlw	y
      000129 56               [ 2]  248 	rrcw	x
      00012A 90 54            [ 2]  249 	srlw	y
      00012C 56               [ 2]  250 	rrcw	x
      00012D 90 54            [ 2]  251 	srlw	y
      00012F 56               [ 2]  252 	rrcw	x
      000130 90 54            [ 2]  253 	srlw	y
      000132 56               [ 2]  254 	rrcw	x
      000133 9F               [ 1]  255 	ld	a, xl
      000134 A4 F0            [ 1]  256 	and	a, #0xf0
      000136 88               [ 1]  257 	push	a
      000137 5F               [ 1]  258 	clrw	x
      000138 0F 22            [ 1]  259 	clr	(0x22, sp)
      00013A 84               [ 1]  260 	pop	a
      00013B 1A 17            [ 1]  261 	or	a, (0x17, sp)
      00013D AE 52 33         [ 2]  262 	ldw	x, #0x5233
      000140 F7               [ 1]  263 	ld	(x), a
                                    264 ;	lib/stm8s_uart1.c: 93: UART1->BRR1 |= (uint8_t)BaudRate_Mantissa;           
      000141 AE 52 32         [ 2]  265 	ldw	x, #0x5232
      000144 F6               [ 1]  266 	ld	a, (x)
      000145 6B 20            [ 1]  267 	ld	(0x20, sp), a
      000147 7B 08            [ 1]  268 	ld	a, (0x08, sp)
      000149 1A 20            [ 1]  269 	or	a, (0x20, sp)
      00014B AE 52 32         [ 2]  270 	ldw	x, #0x5232
      00014E F7               [ 1]  271 	ld	(x), a
                                    272 ;	lib/stm8s_uart1.c: 96: UART1->CR2 &= (uint8_t)~(UART1_CR2_TEN | UART1_CR2_REN); 
      00014F AE 52 35         [ 2]  273 	ldw	x, #0x5235
      000152 F6               [ 1]  274 	ld	a, (x)
      000153 A4 F3            [ 1]  275 	and	a, #0xf3
      000155 F7               [ 1]  276 	ld	(x), a
                                    277 ;	lib/stm8s_uart1.c: 98: UART1->CR3 &= (uint8_t)~(UART1_CR3_CPOL | UART1_CR3_CPHA | UART1_CR3_LBCL); 
      000156 AE 52 36         [ 2]  278 	ldw	x, #0x5236
      000159 F6               [ 1]  279 	ld	a, (x)
      00015A A4 F8            [ 1]  280 	and	a, #0xf8
      00015C F7               [ 1]  281 	ld	(x), a
                                    282 ;	lib/stm8s_uart1.c: 100: UART1->CR3 |= (uint8_t)((uint8_t)SyncMode & (uint8_t)(UART1_CR3_CPOL | 
      00015D AE 52 36         [ 2]  283 	ldw	x, #0x5236
      000160 F6               [ 1]  284 	ld	a, (x)
      000161 6B 25            [ 1]  285 	ld	(0x25, sp), a
      000163 7B 2F            [ 1]  286 	ld	a, (0x2f, sp)
      000165 A4 07            [ 1]  287 	and	a, #0x07
      000167 1A 25            [ 1]  288 	or	a, (0x25, sp)
      000169 AE 52 36         [ 2]  289 	ldw	x, #0x5236
      00016C F7               [ 1]  290 	ld	(x), a
                                    291 ;	lib/stm8s_uart1.c: 103: if ((uint8_t)(Mode & UART1_MODE_TX_ENABLE))
      00016D 7B 30            [ 1]  292 	ld	a, (0x30, sp)
      00016F A5 04            [ 1]  293 	bcp	a, #0x04
      000171 27 09            [ 1]  294 	jreq	00102$
                                    295 ;	lib/stm8s_uart1.c: 106: UART1->CR2 |= (uint8_t)UART1_CR2_TEN;  
      000173 AE 52 35         [ 2]  296 	ldw	x, #0x5235
      000176 F6               [ 1]  297 	ld	a, (x)
      000177 AA 08            [ 1]  298 	or	a, #0x08
      000179 F7               [ 1]  299 	ld	(x), a
      00017A 20 07            [ 2]  300 	jra	00103$
      00017C                        301 00102$:
                                    302 ;	lib/stm8s_uart1.c: 111: UART1->CR2 &= (uint8_t)(~UART1_CR2_TEN);  
      00017C AE 52 35         [ 2]  303 	ldw	x, #0x5235
      00017F F6               [ 1]  304 	ld	a, (x)
      000180 A4 F7            [ 1]  305 	and	a, #0xf7
      000182 F7               [ 1]  306 	ld	(x), a
      000183                        307 00103$:
                                    308 ;	lib/stm8s_uart1.c: 113: if ((uint8_t)(Mode & UART1_MODE_RX_ENABLE))
      000183 7B 30            [ 1]  309 	ld	a, (0x30, sp)
      000185 A5 08            [ 1]  310 	bcp	a, #0x08
      000187 27 09            [ 1]  311 	jreq	00105$
                                    312 ;	lib/stm8s_uart1.c: 116: UART1->CR2 |= (uint8_t)UART1_CR2_REN;  
      000189 AE 52 35         [ 2]  313 	ldw	x, #0x5235
      00018C F6               [ 1]  314 	ld	a, (x)
      00018D AA 04            [ 1]  315 	or	a, #0x04
      00018F F7               [ 1]  316 	ld	(x), a
      000190 20 07            [ 2]  317 	jra	00106$
      000192                        318 00105$:
                                    319 ;	lib/stm8s_uart1.c: 121: UART1->CR2 &= (uint8_t)(~UART1_CR2_REN);  
      000192 AE 52 35         [ 2]  320 	ldw	x, #0x5235
      000195 F6               [ 1]  321 	ld	a, (x)
      000196 A4 FB            [ 1]  322 	and	a, #0xfb
      000198 F7               [ 1]  323 	ld	(x), a
      000199                        324 00106$:
                                    325 ;	lib/stm8s_uart1.c: 125: if ((uint8_t)(SyncMode & UART1_SYNCMODE_CLOCK_DISABLE))
      000199 0D 2F            [ 1]  326 	tnz	(0x2f, sp)
      00019B 2A 09            [ 1]  327 	jrpl	00108$
                                    328 ;	lib/stm8s_uart1.c: 128: UART1->CR3 &= (uint8_t)(~UART1_CR3_CKEN); 
      00019D AE 52 36         [ 2]  329 	ldw	x, #0x5236
      0001A0 F6               [ 1]  330 	ld	a, (x)
      0001A1 A4 F7            [ 1]  331 	and	a, #0xf7
      0001A3 F7               [ 1]  332 	ld	(x), a
      0001A4 20 10            [ 2]  333 	jra	00110$
      0001A6                        334 00108$:
                                    335 ;	lib/stm8s_uart1.c: 132: UART1->CR3 |= (uint8_t)((uint8_t)SyncMode & UART1_CR3_CKEN);
      0001A6 AE 52 36         [ 2]  336 	ldw	x, #0x5236
      0001A9 F6               [ 1]  337 	ld	a, (x)
      0001AA 6B 15            [ 1]  338 	ld	(0x15, sp), a
      0001AC 7B 2F            [ 1]  339 	ld	a, (0x2f, sp)
      0001AE A4 08            [ 1]  340 	and	a, #0x08
      0001B0 1A 15            [ 1]  341 	or	a, (0x15, sp)
      0001B2 AE 52 36         [ 2]  342 	ldw	x, #0x5236
      0001B5 F7               [ 1]  343 	ld	(x), a
      0001B6                        344 00110$:
      0001B6 5B 25            [ 2]  345 	addw	sp, #37
      0001B8 81               [ 4]  346 	ret
                                    347 ;	lib/stm8s_uart1.c: 142: void UART1_Cmd(FunctionalState NewState)
                                    348 ;	-----------------------------------------
                                    349 ;	 function UART1_Cmd
                                    350 ;	-----------------------------------------
      0001B9                        351 _UART1_Cmd:
                                    352 ;	lib/stm8s_uart1.c: 144: if (NewState != DISABLE)
      0001B9 0D 03            [ 1]  353 	tnz	(0x03, sp)
      0001BB 27 08            [ 1]  354 	jreq	00102$
                                    355 ;	lib/stm8s_uart1.c: 147: UART1->CR1 &= (uint8_t)(~UART1_CR1_UARTD); 
      0001BD AE 52 34         [ 2]  356 	ldw	x, #0x5234
      0001C0 F6               [ 1]  357 	ld	a, (x)
      0001C1 A4 DF            [ 1]  358 	and	a, #0xdf
      0001C3 F7               [ 1]  359 	ld	(x), a
      0001C4 81               [ 4]  360 	ret
      0001C5                        361 00102$:
                                    362 ;	lib/stm8s_uart1.c: 152: UART1->CR1 |= UART1_CR1_UARTD;  
      0001C5 AE 52 34         [ 2]  363 	ldw	x, #0x5234
      0001C8 F6               [ 1]  364 	ld	a, (x)
      0001C9 AA 20            [ 1]  365 	or	a, #0x20
      0001CB F7               [ 1]  366 	ld	(x), a
      0001CC 81               [ 4]  367 	ret
                                    368 ;	lib/stm8s_uart1.c: 169: void UART1_ITConfig(UART1_IT_TypeDef UART1_IT, FunctionalState NewState)
                                    369 ;	-----------------------------------------
                                    370 ;	 function UART1_ITConfig
                                    371 ;	-----------------------------------------
      0001CD                        372 _UART1_ITConfig:
      0001CD 52 03            [ 2]  373 	sub	sp, #3
                                    374 ;	lib/stm8s_uart1.c: 174: uartreg = (uint8_t)((uint16_t)UART1_IT >> 0x08);
      0001CF 7B 06            [ 1]  375 	ld	a, (0x06, sp)
      0001D1 97               [ 1]  376 	ld	xl, a
      0001D2 4F               [ 1]  377 	clr	a
                                    378 ;	lib/stm8s_uart1.c: 176: itpos = (uint8_t)((uint8_t)1 << (uint8_t)((uint8_t)UART1_IT & (uint8_t)0x0F));
      0001D3 7B 07            [ 1]  379 	ld	a, (0x07, sp)
      0001D5 A4 0F            [ 1]  380 	and	a, #0x0f
      0001D7 95               [ 1]  381 	ld	xh, a
      0001D8 A6 01            [ 1]  382 	ld	a, #0x01
      0001DA 88               [ 1]  383 	push	a
      0001DB 9E               [ 1]  384 	ld	a, xh
      0001DC 4D               [ 1]  385 	tnz	a
      0001DD 27 05            [ 1]  386 	jreq	00139$
      0001DF                        387 00138$:
      0001DF 08 01            [ 1]  388 	sll	(1, sp)
      0001E1 4A               [ 1]  389 	dec	a
      0001E2 26 FB            [ 1]  390 	jrne	00138$
      0001E4                        391 00139$:
      0001E4 84               [ 1]  392 	pop	a
      0001E5 6B 01            [ 1]  393 	ld	(0x01, sp), a
                                    394 ;	lib/stm8s_uart1.c: 181: if (uartreg == 0x01)
      0001E7 9F               [ 1]  395 	ld	a, xl
      0001E8 A1 01            [ 1]  396 	cp	a, #0x01
      0001EA 26 06            [ 1]  397 	jrne	00141$
      0001EC A6 01            [ 1]  398 	ld	a, #0x01
      0001EE 6B 02            [ 1]  399 	ld	(0x02, sp), a
      0001F0 20 02            [ 2]  400 	jra	00142$
      0001F2                        401 00141$:
      0001F2 0F 02            [ 1]  402 	clr	(0x02, sp)
      0001F4                        403 00142$:
                                    404 ;	lib/stm8s_uart1.c: 185: else if (uartreg == 0x02)
      0001F4 9F               [ 1]  405 	ld	a, xl
      0001F5 A1 02            [ 1]  406 	cp	a, #0x02
      0001F7 26 03            [ 1]  407 	jrne	00144$
      0001F9 A6 01            [ 1]  408 	ld	a, #0x01
      0001FB 21                     409 	.byte 0x21
      0001FC                        410 00144$:
      0001FC 4F               [ 1]  411 	clr	a
      0001FD                        412 00145$:
                                    413 ;	lib/stm8s_uart1.c: 178: if (NewState != DISABLE)
      0001FD 0D 08            [ 1]  414 	tnz	(0x08, sp)
      0001FF 27 2B            [ 1]  415 	jreq	00114$
                                    416 ;	lib/stm8s_uart1.c: 181: if (uartreg == 0x01)
      000201 0D 02            [ 1]  417 	tnz	(0x02, sp)
      000203 27 0C            [ 1]  418 	jreq	00105$
                                    419 ;	lib/stm8s_uart1.c: 183: UART1->CR1 |= itpos;
      000205 AE 52 34         [ 2]  420 	ldw	x, #0x5234
      000208 F6               [ 1]  421 	ld	a, (x)
      000209 1A 01            [ 1]  422 	or	a, (0x01, sp)
      00020B AE 52 34         [ 2]  423 	ldw	x, #0x5234
      00020E F7               [ 1]  424 	ld	(x), a
      00020F 20 4B            [ 2]  425 	jra	00116$
      000211                        426 00105$:
                                    427 ;	lib/stm8s_uart1.c: 185: else if (uartreg == 0x02)
      000211 4D               [ 1]  428 	tnz	a
      000212 27 0C            [ 1]  429 	jreq	00102$
                                    430 ;	lib/stm8s_uart1.c: 187: UART1->CR2 |= itpos;
      000214 AE 52 35         [ 2]  431 	ldw	x, #0x5235
      000217 F6               [ 1]  432 	ld	a, (x)
      000218 1A 01            [ 1]  433 	or	a, (0x01, sp)
      00021A AE 52 35         [ 2]  434 	ldw	x, #0x5235
      00021D F7               [ 1]  435 	ld	(x), a
      00021E 20 3C            [ 2]  436 	jra	00116$
      000220                        437 00102$:
                                    438 ;	lib/stm8s_uart1.c: 191: UART1->CR4 |= itpos;
      000220 AE 52 37         [ 2]  439 	ldw	x, #0x5237
      000223 F6               [ 1]  440 	ld	a, (x)
      000224 1A 01            [ 1]  441 	or	a, (0x01, sp)
      000226 AE 52 37         [ 2]  442 	ldw	x, #0x5237
      000229 F7               [ 1]  443 	ld	(x), a
      00022A 20 30            [ 2]  444 	jra	00116$
      00022C                        445 00114$:
                                    446 ;	lib/stm8s_uart1.c: 199: UART1->CR1 &= (uint8_t)(~itpos);
      00022C 88               [ 1]  447 	push	a
      00022D 7B 02            [ 1]  448 	ld	a, (0x02, sp)
      00022F 43               [ 1]  449 	cpl	a
      000230 6B 04            [ 1]  450 	ld	(0x04, sp), a
      000232 84               [ 1]  451 	pop	a
                                    452 ;	lib/stm8s_uart1.c: 197: if (uartreg == 0x01)
      000233 0D 02            [ 1]  453 	tnz	(0x02, sp)
      000235 27 0C            [ 1]  454 	jreq	00111$
                                    455 ;	lib/stm8s_uart1.c: 199: UART1->CR1 &= (uint8_t)(~itpos);
      000237 AE 52 34         [ 2]  456 	ldw	x, #0x5234
      00023A F6               [ 1]  457 	ld	a, (x)
      00023B 14 03            [ 1]  458 	and	a, (0x03, sp)
      00023D AE 52 34         [ 2]  459 	ldw	x, #0x5234
      000240 F7               [ 1]  460 	ld	(x), a
      000241 20 19            [ 2]  461 	jra	00116$
      000243                        462 00111$:
                                    463 ;	lib/stm8s_uart1.c: 201: else if (uartreg == 0x02)
      000243 4D               [ 1]  464 	tnz	a
      000244 27 0C            [ 1]  465 	jreq	00108$
                                    466 ;	lib/stm8s_uart1.c: 203: UART1->CR2 &= (uint8_t)(~itpos);
      000246 AE 52 35         [ 2]  467 	ldw	x, #0x5235
      000249 F6               [ 1]  468 	ld	a, (x)
      00024A 14 03            [ 1]  469 	and	a, (0x03, sp)
      00024C AE 52 35         [ 2]  470 	ldw	x, #0x5235
      00024F F7               [ 1]  471 	ld	(x), a
      000250 20 0A            [ 2]  472 	jra	00116$
      000252                        473 00108$:
                                    474 ;	lib/stm8s_uart1.c: 207: UART1->CR4 &= (uint8_t)(~itpos);
      000252 AE 52 37         [ 2]  475 	ldw	x, #0x5237
      000255 F6               [ 1]  476 	ld	a, (x)
      000256 14 03            [ 1]  477 	and	a, (0x03, sp)
      000258 AE 52 37         [ 2]  478 	ldw	x, #0x5237
      00025B F7               [ 1]  479 	ld	(x), a
      00025C                        480 00116$:
      00025C 5B 03            [ 2]  481 	addw	sp, #3
      00025E 81               [ 4]  482 	ret
                                    483 ;	lib/stm8s_uart1.c: 219: void UART1_HalfDuplexCmd(FunctionalState NewState)
                                    484 ;	-----------------------------------------
                                    485 ;	 function UART1_HalfDuplexCmd
                                    486 ;	-----------------------------------------
      00025F                        487 _UART1_HalfDuplexCmd:
                                    488 ;	lib/stm8s_uart1.c: 222: if (NewState != DISABLE)
      00025F 0D 03            [ 1]  489 	tnz	(0x03, sp)
      000261 27 08            [ 1]  490 	jreq	00102$
                                    491 ;	lib/stm8s_uart1.c: 224: UART1->CR5 |= UART1_CR5_HDSEL;  /**< UART1 Half Duplex Enable  */
      000263 AE 52 38         [ 2]  492 	ldw	x, #0x5238
      000266 F6               [ 1]  493 	ld	a, (x)
      000267 AA 08            [ 1]  494 	or	a, #0x08
      000269 F7               [ 1]  495 	ld	(x), a
      00026A 81               [ 4]  496 	ret
      00026B                        497 00102$:
                                    498 ;	lib/stm8s_uart1.c: 228: UART1->CR5 &= (uint8_t)~UART1_CR5_HDSEL; /**< UART1 Half Duplex Disable */
      00026B AE 52 38         [ 2]  499 	ldw	x, #0x5238
      00026E F6               [ 1]  500 	ld	a, (x)
      00026F A4 F7            [ 1]  501 	and	a, #0xf7
      000271 F7               [ 1]  502 	ld	(x), a
      000272 81               [ 4]  503 	ret
                                    504 ;	lib/stm8s_uart1.c: 238: void UART1_IrDAConfig(UART1_IrDAMode_TypeDef UART1_IrDAMode)
                                    505 ;	-----------------------------------------
                                    506 ;	 function UART1_IrDAConfig
                                    507 ;	-----------------------------------------
      000273                        508 _UART1_IrDAConfig:
                                    509 ;	lib/stm8s_uart1.c: 241: if (UART1_IrDAMode != UART1_IRDAMODE_NORMAL)
      000273 0D 03            [ 1]  510 	tnz	(0x03, sp)
      000275 27 08            [ 1]  511 	jreq	00102$
                                    512 ;	lib/stm8s_uart1.c: 243: UART1->CR5 |= UART1_CR5_IRLP;
      000277 AE 52 38         [ 2]  513 	ldw	x, #0x5238
      00027A F6               [ 1]  514 	ld	a, (x)
      00027B AA 04            [ 1]  515 	or	a, #0x04
      00027D F7               [ 1]  516 	ld	(x), a
      00027E 81               [ 4]  517 	ret
      00027F                        518 00102$:
                                    519 ;	lib/stm8s_uart1.c: 247: UART1->CR5 &= ((uint8_t)~UART1_CR5_IRLP);
      00027F AE 52 38         [ 2]  520 	ldw	x, #0x5238
      000282 F6               [ 1]  521 	ld	a, (x)
      000283 A4 FB            [ 1]  522 	and	a, #0xfb
      000285 F7               [ 1]  523 	ld	(x), a
      000286 81               [ 4]  524 	ret
                                    525 ;	lib/stm8s_uart1.c: 257: void UART1_IrDACmd(FunctionalState NewState)
                                    526 ;	-----------------------------------------
                                    527 ;	 function UART1_IrDACmd
                                    528 ;	-----------------------------------------
      000287                        529 _UART1_IrDACmd:
                                    530 ;	lib/stm8s_uart1.c: 259: if (NewState != DISABLE)
      000287 0D 03            [ 1]  531 	tnz	(0x03, sp)
      000289 27 08            [ 1]  532 	jreq	00102$
                                    533 ;	lib/stm8s_uart1.c: 262: UART1->CR5 |= UART1_CR5_IREN;
      00028B AE 52 38         [ 2]  534 	ldw	x, #0x5238
      00028E F6               [ 1]  535 	ld	a, (x)
      00028F AA 02            [ 1]  536 	or	a, #0x02
      000291 F7               [ 1]  537 	ld	(x), a
      000292 81               [ 4]  538 	ret
      000293                        539 00102$:
                                    540 ;	lib/stm8s_uart1.c: 267: UART1->CR5 &= ((uint8_t)~UART1_CR5_IREN);
      000293 AE 52 38         [ 2]  541 	ldw	x, #0x5238
      000296 F6               [ 1]  542 	ld	a, (x)
      000297 A4 FD            [ 1]  543 	and	a, #0xfd
      000299 F7               [ 1]  544 	ld	(x), a
      00029A 81               [ 4]  545 	ret
                                    546 ;	lib/stm8s_uart1.c: 278: void UART1_LINBreakDetectionConfig(UART1_LINBreakDetectionLength_TypeDef UART1_LINBreakDetectionLength)
                                    547 ;	-----------------------------------------
                                    548 ;	 function UART1_LINBreakDetectionConfig
                                    549 ;	-----------------------------------------
      00029B                        550 _UART1_LINBreakDetectionConfig:
                                    551 ;	lib/stm8s_uart1.c: 281: if (UART1_LINBreakDetectionLength != UART1_LINBREAKDETECTIONLENGTH_10BITS)
      00029B 0D 03            [ 1]  552 	tnz	(0x03, sp)
      00029D 27 08            [ 1]  553 	jreq	00102$
                                    554 ;	lib/stm8s_uart1.c: 283: UART1->CR4 |= UART1_CR4_LBDL;
      00029F AE 52 37         [ 2]  555 	ldw	x, #0x5237
      0002A2 F6               [ 1]  556 	ld	a, (x)
      0002A3 AA 20            [ 1]  557 	or	a, #0x20
      0002A5 F7               [ 1]  558 	ld	(x), a
      0002A6 81               [ 4]  559 	ret
      0002A7                        560 00102$:
                                    561 ;	lib/stm8s_uart1.c: 287: UART1->CR4 &= ((uint8_t)~UART1_CR4_LBDL);
      0002A7 AE 52 37         [ 2]  562 	ldw	x, #0x5237
      0002AA F6               [ 1]  563 	ld	a, (x)
      0002AB A4 DF            [ 1]  564 	and	a, #0xdf
      0002AD F7               [ 1]  565 	ld	(x), a
      0002AE 81               [ 4]  566 	ret
                                    567 ;	lib/stm8s_uart1.c: 297: void UART1_LINCmd(FunctionalState NewState)
                                    568 ;	-----------------------------------------
                                    569 ;	 function UART1_LINCmd
                                    570 ;	-----------------------------------------
      0002AF                        571 _UART1_LINCmd:
                                    572 ;	lib/stm8s_uart1.c: 300: if (NewState != DISABLE)
      0002AF 0D 03            [ 1]  573 	tnz	(0x03, sp)
      0002B1 27 08            [ 1]  574 	jreq	00102$
                                    575 ;	lib/stm8s_uart1.c: 303: UART1->CR3 |= UART1_CR3_LINEN;
      0002B3 AE 52 36         [ 2]  576 	ldw	x, #0x5236
      0002B6 F6               [ 1]  577 	ld	a, (x)
      0002B7 AA 40            [ 1]  578 	or	a, #0x40
      0002B9 F7               [ 1]  579 	ld	(x), a
      0002BA 81               [ 4]  580 	ret
      0002BB                        581 00102$:
                                    582 ;	lib/stm8s_uart1.c: 308: UART1->CR3 &= ((uint8_t)~UART1_CR3_LINEN);
      0002BB AE 52 36         [ 2]  583 	ldw	x, #0x5236
      0002BE F6               [ 1]  584 	ld	a, (x)
      0002BF A4 BF            [ 1]  585 	and	a, #0xbf
      0002C1 F7               [ 1]  586 	ld	(x), a
      0002C2 81               [ 4]  587 	ret
                                    588 ;	lib/stm8s_uart1.c: 318: void UART1_SmartCardCmd(FunctionalState NewState)
                                    589 ;	-----------------------------------------
                                    590 ;	 function UART1_SmartCardCmd
                                    591 ;	-----------------------------------------
      0002C3                        592 _UART1_SmartCardCmd:
                                    593 ;	lib/stm8s_uart1.c: 321: if (NewState != DISABLE)
      0002C3 0D 03            [ 1]  594 	tnz	(0x03, sp)
      0002C5 27 08            [ 1]  595 	jreq	00102$
                                    596 ;	lib/stm8s_uart1.c: 324: UART1->CR5 |= UART1_CR5_SCEN;
      0002C7 AE 52 38         [ 2]  597 	ldw	x, #0x5238
      0002CA F6               [ 1]  598 	ld	a, (x)
      0002CB AA 20            [ 1]  599 	or	a, #0x20
      0002CD F7               [ 1]  600 	ld	(x), a
      0002CE 81               [ 4]  601 	ret
      0002CF                        602 00102$:
                                    603 ;	lib/stm8s_uart1.c: 329: UART1->CR5 &= ((uint8_t)(~UART1_CR5_SCEN));
      0002CF AE 52 38         [ 2]  604 	ldw	x, #0x5238
      0002D2 F6               [ 1]  605 	ld	a, (x)
      0002D3 A4 DF            [ 1]  606 	and	a, #0xdf
      0002D5 F7               [ 1]  607 	ld	(x), a
      0002D6 81               [ 4]  608 	ret
                                    609 ;	lib/stm8s_uart1.c: 340: void UART1_SmartCardNACKCmd(FunctionalState NewState)
                                    610 ;	-----------------------------------------
                                    611 ;	 function UART1_SmartCardNACKCmd
                                    612 ;	-----------------------------------------
      0002D7                        613 _UART1_SmartCardNACKCmd:
                                    614 ;	lib/stm8s_uart1.c: 342: if (NewState != DISABLE)
      0002D7 0D 03            [ 1]  615 	tnz	(0x03, sp)
      0002D9 27 08            [ 1]  616 	jreq	00102$
                                    617 ;	lib/stm8s_uart1.c: 345: UART1->CR5 |= UART1_CR5_NACK;
      0002DB AE 52 38         [ 2]  618 	ldw	x, #0x5238
      0002DE F6               [ 1]  619 	ld	a, (x)
      0002DF AA 10            [ 1]  620 	or	a, #0x10
      0002E1 F7               [ 1]  621 	ld	(x), a
      0002E2 81               [ 4]  622 	ret
      0002E3                        623 00102$:
                                    624 ;	lib/stm8s_uart1.c: 350: UART1->CR5 &= ((uint8_t)~(UART1_CR5_NACK));
      0002E3 AE 52 38         [ 2]  625 	ldw	x, #0x5238
      0002E6 F6               [ 1]  626 	ld	a, (x)
      0002E7 A4 EF            [ 1]  627 	and	a, #0xef
      0002E9 F7               [ 1]  628 	ld	(x), a
      0002EA 81               [ 4]  629 	ret
                                    630 ;	lib/stm8s_uart1.c: 360: void UART1_WakeUpConfig(UART1_WakeUp_TypeDef UART1_WakeUp)
                                    631 ;	-----------------------------------------
                                    632 ;	 function UART1_WakeUpConfig
                                    633 ;	-----------------------------------------
      0002EB                        634 _UART1_WakeUpConfig:
                                    635 ;	lib/stm8s_uart1.c: 363: UART1->CR1 &= ((uint8_t)~UART1_CR1_WAKE);
      0002EB AE 52 34         [ 2]  636 	ldw	x, #0x5234
      0002EE F6               [ 1]  637 	ld	a, (x)
      0002EF A4 F7            [ 1]  638 	and	a, #0xf7
      0002F1 F7               [ 1]  639 	ld	(x), a
                                    640 ;	lib/stm8s_uart1.c: 364: UART1->CR1 |= (uint8_t)UART1_WakeUp;
      0002F2 AE 52 34         [ 2]  641 	ldw	x, #0x5234
      0002F5 F6               [ 1]  642 	ld	a, (x)
      0002F6 1A 03            [ 1]  643 	or	a, (0x03, sp)
      0002F8 AE 52 34         [ 2]  644 	ldw	x, #0x5234
      0002FB F7               [ 1]  645 	ld	(x), a
      0002FC 81               [ 4]  646 	ret
                                    647 ;	lib/stm8s_uart1.c: 373: void UART1_ReceiverWakeUpCmd(FunctionalState NewState)
                                    648 ;	-----------------------------------------
                                    649 ;	 function UART1_ReceiverWakeUpCmd
                                    650 ;	-----------------------------------------
      0002FD                        651 _UART1_ReceiverWakeUpCmd:
                                    652 ;	lib/stm8s_uart1.c: 376: if (NewState != DISABLE)
      0002FD 0D 03            [ 1]  653 	tnz	(0x03, sp)
      0002FF 27 08            [ 1]  654 	jreq	00102$
                                    655 ;	lib/stm8s_uart1.c: 379: UART1->CR2 |= UART1_CR2_RWU;
      000301 AE 52 35         [ 2]  656 	ldw	x, #0x5235
      000304 F6               [ 1]  657 	ld	a, (x)
      000305 AA 02            [ 1]  658 	or	a, #0x02
      000307 F7               [ 1]  659 	ld	(x), a
      000308 81               [ 4]  660 	ret
      000309                        661 00102$:
                                    662 ;	lib/stm8s_uart1.c: 384: UART1->CR2 &= ((uint8_t)~UART1_CR2_RWU);
      000309 AE 52 35         [ 2]  663 	ldw	x, #0x5235
      00030C F6               [ 1]  664 	ld	a, (x)
      00030D A4 FD            [ 1]  665 	and	a, #0xfd
      00030F F7               [ 1]  666 	ld	(x), a
      000310 81               [ 4]  667 	ret
                                    668 ;	lib/stm8s_uart1.c: 393: uint8_t UART1_ReceiveData8(void)
                                    669 ;	-----------------------------------------
                                    670 ;	 function UART1_ReceiveData8
                                    671 ;	-----------------------------------------
      000311                        672 _UART1_ReceiveData8:
                                    673 ;	lib/stm8s_uart1.c: 395: return ((uint8_t)UART1->DR);
      000311 AE 52 31         [ 2]  674 	ldw	x, #0x5231
      000314 F6               [ 1]  675 	ld	a, (x)
      000315 81               [ 4]  676 	ret
                                    677 ;	lib/stm8s_uart1.c: 403: uint16_t UART1_ReceiveData9(void)
                                    678 ;	-----------------------------------------
                                    679 ;	 function UART1_ReceiveData9
                                    680 ;	-----------------------------------------
      000316                        681 _UART1_ReceiveData9:
      000316 52 04            [ 2]  682 	sub	sp, #4
                                    683 ;	lib/stm8s_uart1.c: 407: temp = (uint16_t)(((uint16_t)( (uint16_t)UART1->CR1 & (uint16_t)UART1_CR1_R8)) << 1);
      000318 AE 52 34         [ 2]  684 	ldw	x, #0x5234
      00031B F6               [ 1]  685 	ld	a, (x)
      00031C 0F 03            [ 1]  686 	clr	(0x03, sp)
      00031E A4 80            [ 1]  687 	and	a, #0x80
      000320 97               [ 1]  688 	ld	xl, a
      000321 4F               [ 1]  689 	clr	a
      000322 95               [ 1]  690 	ld	xh, a
      000323 58               [ 2]  691 	sllw	x
      000324 1F 01            [ 2]  692 	ldw	(0x01, sp), x
                                    693 ;	lib/stm8s_uart1.c: 408: return (uint16_t)( (((uint16_t) UART1->DR) | temp ) & ((uint16_t)0x01FF));
      000326 AE 52 31         [ 2]  694 	ldw	x, #0x5231
      000329 F6               [ 1]  695 	ld	a, (x)
      00032A 02               [ 1]  696 	rlwa	x
      00032B 4F               [ 1]  697 	clr	a
      00032C 01               [ 1]  698 	rrwa	x
      00032D 1A 02            [ 1]  699 	or	a, (0x02, sp)
      00032F 02               [ 1]  700 	rlwa	x
      000330 1A 01            [ 1]  701 	or	a, (0x01, sp)
      000332 A4 01            [ 1]  702 	and	a, #0x01
      000334 95               [ 1]  703 	ld	xh, a
      000335 5B 04            [ 2]  704 	addw	sp, #4
      000337 81               [ 4]  705 	ret
                                    706 ;	lib/stm8s_uart1.c: 416: void UART1_SendData8(uint8_t Data)
                                    707 ;	-----------------------------------------
                                    708 ;	 function UART1_SendData8
                                    709 ;	-----------------------------------------
      000338                        710 _UART1_SendData8:
                                    711 ;	lib/stm8s_uart1.c: 419: UART1->DR = Data;
      000338 AE 52 31         [ 2]  712 	ldw	x, #0x5231
      00033B 7B 03            [ 1]  713 	ld	a, (0x03, sp)
      00033D F7               [ 1]  714 	ld	(x), a
      00033E 81               [ 4]  715 	ret
                                    716 ;	lib/stm8s_uart1.c: 428: void UART1_SendData9(uint16_t Data)
                                    717 ;	-----------------------------------------
                                    718 ;	 function UART1_SendData9
                                    719 ;	-----------------------------------------
      00033F                        720 _UART1_SendData9:
      00033F 88               [ 1]  721 	push	a
                                    722 ;	lib/stm8s_uart1.c: 431: UART1->CR1 &= ((uint8_t)~UART1_CR1_T8);
      000340 AE 52 34         [ 2]  723 	ldw	x, #0x5234
      000343 F6               [ 1]  724 	ld	a, (x)
      000344 A4 BF            [ 1]  725 	and	a, #0xbf
      000346 F7               [ 1]  726 	ld	(x), a
                                    727 ;	lib/stm8s_uart1.c: 433: UART1->CR1 |= (uint8_t)(((uint8_t)(Data >> 2)) & UART1_CR1_T8);
      000347 AE 52 34         [ 2]  728 	ldw	x, #0x5234
      00034A F6               [ 1]  729 	ld	a, (x)
      00034B 6B 01            [ 1]  730 	ld	(0x01, sp), a
      00034D 1E 04            [ 2]  731 	ldw	x, (0x04, sp)
      00034F 54               [ 2]  732 	srlw	x
      000350 54               [ 2]  733 	srlw	x
      000351 9F               [ 1]  734 	ld	a, xl
      000352 A4 40            [ 1]  735 	and	a, #0x40
      000354 1A 01            [ 1]  736 	or	a, (0x01, sp)
      000356 AE 52 34         [ 2]  737 	ldw	x, #0x5234
      000359 F7               [ 1]  738 	ld	(x), a
                                    739 ;	lib/stm8s_uart1.c: 435: UART1->DR   = (uint8_t)(Data);
      00035A 7B 05            [ 1]  740 	ld	a, (0x05, sp)
      00035C AE 52 31         [ 2]  741 	ldw	x, #0x5231
      00035F F7               [ 1]  742 	ld	(x), a
      000360 84               [ 1]  743 	pop	a
      000361 81               [ 4]  744 	ret
                                    745 ;	lib/stm8s_uart1.c: 443: void UART1_SendBreak(void)
                                    746 ;	-----------------------------------------
                                    747 ;	 function UART1_SendBreak
                                    748 ;	-----------------------------------------
      000362                        749 _UART1_SendBreak:
                                    750 ;	lib/stm8s_uart1.c: 445: UART1->CR2 |= UART1_CR2_SBK;
      000362 72 10 52 35      [ 1]  751 	bset	0x5235, #0
      000366 81               [ 4]  752 	ret
                                    753 ;	lib/stm8s_uart1.c: 453: void UART1_SetAddress(uint8_t UART1_Address)
                                    754 ;	-----------------------------------------
                                    755 ;	 function UART1_SetAddress
                                    756 ;	-----------------------------------------
      000367                        757 _UART1_SetAddress:
                                    758 ;	lib/stm8s_uart1.c: 457: UART1->CR4 &= ((uint8_t)~UART1_CR4_ADD);
      000367 AE 52 37         [ 2]  759 	ldw	x, #0x5237
      00036A F6               [ 1]  760 	ld	a, (x)
      00036B A4 F0            [ 1]  761 	and	a, #0xf0
      00036D F7               [ 1]  762 	ld	(x), a
                                    763 ;	lib/stm8s_uart1.c: 459: UART1->CR4 |= UART1_Address;
      00036E AE 52 37         [ 2]  764 	ldw	x, #0x5237
      000371 F6               [ 1]  765 	ld	a, (x)
      000372 1A 03            [ 1]  766 	or	a, (0x03, sp)
      000374 AE 52 37         [ 2]  767 	ldw	x, #0x5237
      000377 F7               [ 1]  768 	ld	(x), a
      000378 81               [ 4]  769 	ret
                                    770 ;	lib/stm8s_uart1.c: 468: void UART1_SetGuardTime(uint8_t UART1_GuardTime)
                                    771 ;	-----------------------------------------
                                    772 ;	 function UART1_SetGuardTime
                                    773 ;	-----------------------------------------
      000379                        774 _UART1_SetGuardTime:
                                    775 ;	lib/stm8s_uart1.c: 471: UART1->GTR = UART1_GuardTime;
      000379 AE 52 39         [ 2]  776 	ldw	x, #0x5239
      00037C 7B 03            [ 1]  777 	ld	a, (0x03, sp)
      00037E F7               [ 1]  778 	ld	(x), a
      00037F 81               [ 4]  779 	ret
                                    780 ;	lib/stm8s_uart1.c: 496: void UART1_SetPrescaler(uint8_t UART1_Prescaler)
                                    781 ;	-----------------------------------------
                                    782 ;	 function UART1_SetPrescaler
                                    783 ;	-----------------------------------------
      000380                        784 _UART1_SetPrescaler:
                                    785 ;	lib/stm8s_uart1.c: 499: UART1->PSCR = UART1_Prescaler;
      000380 AE 52 3A         [ 2]  786 	ldw	x, #0x523a
      000383 7B 03            [ 1]  787 	ld	a, (0x03, sp)
      000385 F7               [ 1]  788 	ld	(x), a
      000386 81               [ 4]  789 	ret
                                    790 ;	lib/stm8s_uart1.c: 508: FlagStatus UART1_GetFlagStatus(UART1_Flag_TypeDef UART1_FLAG)
                                    791 ;	-----------------------------------------
                                    792 ;	 function UART1_GetFlagStatus
                                    793 ;	-----------------------------------------
      000387                        794 _UART1_GetFlagStatus:
      000387 88               [ 1]  795 	push	a
                                    796 ;	lib/stm8s_uart1.c: 516: if ((UART1->CR4 & (uint8_t)UART1_FLAG) != (uint8_t)0x00)
      000388 7B 05            [ 1]  797 	ld	a, (0x05, sp)
      00038A 6B 01            [ 1]  798 	ld	(0x01, sp), a
                                    799 ;	lib/stm8s_uart1.c: 514: if (UART1_FLAG == UART1_FLAG_LBDF)
      00038C 1E 04            [ 2]  800 	ldw	x, (0x04, sp)
      00038E A3 02 10         [ 2]  801 	cpw	x, #0x0210
      000391 26 10            [ 1]  802 	jrne	00114$
                                    803 ;	lib/stm8s_uart1.c: 516: if ((UART1->CR4 & (uint8_t)UART1_FLAG) != (uint8_t)0x00)
      000393 AE 52 37         [ 2]  804 	ldw	x, #0x5237
      000396 F6               [ 1]  805 	ld	a, (x)
      000397 14 01            [ 1]  806 	and	a, (0x01, sp)
      000399 4D               [ 1]  807 	tnz	a
      00039A 27 04            [ 1]  808 	jreq	00102$
                                    809 ;	lib/stm8s_uart1.c: 519: status = SET;
      00039C A6 01            [ 1]  810 	ld	a, #0x01
      00039E 20 27            [ 2]  811 	jra	00115$
      0003A0                        812 00102$:
                                    813 ;	lib/stm8s_uart1.c: 524: status = RESET;
      0003A0 4F               [ 1]  814 	clr	a
      0003A1 20 24            [ 2]  815 	jra	00115$
      0003A3                        816 00114$:
                                    817 ;	lib/stm8s_uart1.c: 527: else if (UART1_FLAG == UART1_FLAG_SBK)
      0003A3 1E 04            [ 2]  818 	ldw	x, (0x04, sp)
      0003A5 A3 01 01         [ 2]  819 	cpw	x, #0x0101
      0003A8 26 10            [ 1]  820 	jrne	00111$
                                    821 ;	lib/stm8s_uart1.c: 529: if ((UART1->CR2 & (uint8_t)UART1_FLAG) != (uint8_t)0x00)
      0003AA AE 52 35         [ 2]  822 	ldw	x, #0x5235
      0003AD F6               [ 1]  823 	ld	a, (x)
      0003AE 14 01            [ 1]  824 	and	a, (0x01, sp)
      0003B0 4D               [ 1]  825 	tnz	a
      0003B1 27 04            [ 1]  826 	jreq	00105$
                                    827 ;	lib/stm8s_uart1.c: 532: status = SET;
      0003B3 A6 01            [ 1]  828 	ld	a, #0x01
      0003B5 20 10            [ 2]  829 	jra	00115$
      0003B7                        830 00105$:
                                    831 ;	lib/stm8s_uart1.c: 537: status = RESET;
      0003B7 4F               [ 1]  832 	clr	a
      0003B8 20 0D            [ 2]  833 	jra	00115$
      0003BA                        834 00111$:
                                    835 ;	lib/stm8s_uart1.c: 542: if ((UART1->SR & (uint8_t)UART1_FLAG) != (uint8_t)0x00)
      0003BA AE 52 30         [ 2]  836 	ldw	x, #0x5230
      0003BD F6               [ 1]  837 	ld	a, (x)
      0003BE 14 01            [ 1]  838 	and	a, (0x01, sp)
      0003C0 4D               [ 1]  839 	tnz	a
      0003C1 27 03            [ 1]  840 	jreq	00108$
                                    841 ;	lib/stm8s_uart1.c: 545: status = SET;
      0003C3 A6 01            [ 1]  842 	ld	a, #0x01
                                    843 ;	lib/stm8s_uart1.c: 550: status = RESET;
      0003C5 21                     844 	.byte 0x21
      0003C6                        845 00108$:
      0003C6 4F               [ 1]  846 	clr	a
      0003C7                        847 00115$:
                                    848 ;	lib/stm8s_uart1.c: 554: return status;
      0003C7 5B 01            [ 2]  849 	addw	sp, #1
      0003C9 81               [ 4]  850 	ret
                                    851 ;	lib/stm8s_uart1.c: 583: void UART1_ClearFlag(UART1_Flag_TypeDef UART1_FLAG)
                                    852 ;	-----------------------------------------
                                    853 ;	 function UART1_ClearFlag
                                    854 ;	-----------------------------------------
      0003CA                        855 _UART1_ClearFlag:
                                    856 ;	lib/stm8s_uart1.c: 587: if (UART1_FLAG == UART1_FLAG_RXNE)
      0003CA 1E 03            [ 2]  857 	ldw	x, (0x03, sp)
      0003CC A3 00 20         [ 2]  858 	cpw	x, #0x0020
      0003CF 26 05            [ 1]  859 	jrne	00102$
                                    860 ;	lib/stm8s_uart1.c: 589: UART1->SR = (uint8_t)~(UART1_SR_RXNE);
      0003D1 35 DF 52 30      [ 1]  861 	mov	0x5230+0, #0xdf
      0003D5 81               [ 4]  862 	ret
      0003D6                        863 00102$:
                                    864 ;	lib/stm8s_uart1.c: 594: UART1->CR4 &= (uint8_t)~(UART1_CR4_LBDF);
      0003D6 AE 52 37         [ 2]  865 	ldw	x, #0x5237
      0003D9 F6               [ 1]  866 	ld	a, (x)
      0003DA A4 EF            [ 1]  867 	and	a, #0xef
      0003DC F7               [ 1]  868 	ld	(x), a
      0003DD 81               [ 4]  869 	ret
                                    870 ;	lib/stm8s_uart1.c: 611: ITStatus UART1_GetITStatus(UART1_IT_TypeDef UART1_IT)
                                    871 ;	-----------------------------------------
                                    872 ;	 function UART1_GetITStatus
                                    873 ;	-----------------------------------------
      0003DE                        874 _UART1_GetITStatus:
      0003DE 52 05            [ 2]  875 	sub	sp, #5
                                    876 ;	lib/stm8s_uart1.c: 620: itpos = (uint8_t)((uint8_t)1 << (uint8_t)((uint8_t)UART1_IT & (uint8_t)0x0F));
      0003E0 7B 09            [ 1]  877 	ld	a, (0x09, sp)
      0003E2 97               [ 1]  878 	ld	xl, a
      0003E3 A4 0F            [ 1]  879 	and	a, #0x0f
      0003E5 95               [ 1]  880 	ld	xh, a
      0003E6 A6 01            [ 1]  881 	ld	a, #0x01
      0003E8 88               [ 1]  882 	push	a
      0003E9 9E               [ 1]  883 	ld	a, xh
      0003EA 4D               [ 1]  884 	tnz	a
      0003EB 27 05            [ 1]  885 	jreq	00154$
      0003ED                        886 00153$:
      0003ED 08 01            [ 1]  887 	sll	(1, sp)
      0003EF 4A               [ 1]  888 	dec	a
      0003F0 26 FB            [ 1]  889 	jrne	00153$
      0003F2                        890 00154$:
      0003F2 84               [ 1]  891 	pop	a
      0003F3 6B 03            [ 1]  892 	ld	(0x03, sp), a
                                    893 ;	lib/stm8s_uart1.c: 622: itmask1 = (uint8_t)((uint8_t)UART1_IT >> (uint8_t)4);
      0003F5 9F               [ 1]  894 	ld	a, xl
      0003F6 4E               [ 1]  895 	swap	a
      0003F7 A4 0F            [ 1]  896 	and	a, #0x0f
      0003F9 97               [ 1]  897 	ld	xl, a
                                    898 ;	lib/stm8s_uart1.c: 624: itmask2 = (uint8_t)((uint8_t)1 << itmask1);
      0003FA A6 01            [ 1]  899 	ld	a, #0x01
      0003FC 88               [ 1]  900 	push	a
      0003FD 9F               [ 1]  901 	ld	a, xl
      0003FE 4D               [ 1]  902 	tnz	a
      0003FF 27 05            [ 1]  903 	jreq	00156$
      000401                        904 00155$:
      000401 08 01            [ 1]  905 	sll	(1, sp)
      000403 4A               [ 1]  906 	dec	a
      000404 26 FB            [ 1]  907 	jrne	00155$
      000406                        908 00156$:
      000406 84               [ 1]  909 	pop	a
      000407 6B 01            [ 1]  910 	ld	(0x01, sp), a
                                    911 ;	lib/stm8s_uart1.c: 628: if (UART1_IT == UART1_IT_PE)
      000409 1E 08            [ 2]  912 	ldw	x, (0x08, sp)
      00040B A3 01 00         [ 2]  913 	cpw	x, #0x0100
      00040E 26 1C            [ 1]  914 	jrne	00117$
                                    915 ;	lib/stm8s_uart1.c: 631: enablestatus = (uint8_t)((uint8_t)UART1->CR1 & itmask2);
      000410 AE 52 34         [ 2]  916 	ldw	x, #0x5234
      000413 F6               [ 1]  917 	ld	a, (x)
      000414 14 01            [ 1]  918 	and	a, (0x01, sp)
      000416 6B 05            [ 1]  919 	ld	(0x05, sp), a
                                    920 ;	lib/stm8s_uart1.c: 634: if (((UART1->SR & itpos) != (uint8_t)0x00) && enablestatus)
      000418 AE 52 30         [ 2]  921 	ldw	x, #0x5230
      00041B F6               [ 1]  922 	ld	a, (x)
      00041C 14 03            [ 1]  923 	and	a, (0x03, sp)
      00041E 4D               [ 1]  924 	tnz	a
      00041F 27 08            [ 1]  925 	jreq	00102$
      000421 0D 05            [ 1]  926 	tnz	(0x05, sp)
      000423 27 04            [ 1]  927 	jreq	00102$
                                    928 ;	lib/stm8s_uart1.c: 637: pendingbitstatus = SET;
      000425 A6 01            [ 1]  929 	ld	a, #0x01
      000427 20 3F            [ 2]  930 	jra	00118$
      000429                        931 00102$:
                                    932 ;	lib/stm8s_uart1.c: 642: pendingbitstatus = RESET;
      000429 4F               [ 1]  933 	clr	a
      00042A 20 3C            [ 2]  934 	jra	00118$
      00042C                        935 00117$:
                                    936 ;	lib/stm8s_uart1.c: 646: else if (UART1_IT == UART1_IT_LBDF)
      00042C 1E 08            [ 2]  937 	ldw	x, (0x08, sp)
      00042E A3 03 46         [ 2]  938 	cpw	x, #0x0346
      000431 26 1C            [ 1]  939 	jrne	00114$
                                    940 ;	lib/stm8s_uart1.c: 649: enablestatus = (uint8_t)((uint8_t)UART1->CR4 & itmask2);
      000433 AE 52 37         [ 2]  941 	ldw	x, #0x5237
      000436 F6               [ 1]  942 	ld	a, (x)
      000437 14 01            [ 1]  943 	and	a, (0x01, sp)
      000439 6B 02            [ 1]  944 	ld	(0x02, sp), a
                                    945 ;	lib/stm8s_uart1.c: 651: if (((UART1->CR4 & itpos) != (uint8_t)0x00) && enablestatus)
      00043B AE 52 37         [ 2]  946 	ldw	x, #0x5237
      00043E F6               [ 1]  947 	ld	a, (x)
      00043F 14 03            [ 1]  948 	and	a, (0x03, sp)
      000441 4D               [ 1]  949 	tnz	a
      000442 27 08            [ 1]  950 	jreq	00106$
      000444 0D 02            [ 1]  951 	tnz	(0x02, sp)
      000446 27 04            [ 1]  952 	jreq	00106$
                                    953 ;	lib/stm8s_uart1.c: 654: pendingbitstatus = SET;
      000448 A6 01            [ 1]  954 	ld	a, #0x01
      00044A 20 1C            [ 2]  955 	jra	00118$
      00044C                        956 00106$:
                                    957 ;	lib/stm8s_uart1.c: 659: pendingbitstatus = RESET;
      00044C 4F               [ 1]  958 	clr	a
      00044D 20 19            [ 2]  959 	jra	00118$
      00044F                        960 00114$:
                                    961 ;	lib/stm8s_uart1.c: 665: enablestatus = (uint8_t)((uint8_t)UART1->CR2 & itmask2);
      00044F AE 52 35         [ 2]  962 	ldw	x, #0x5235
      000452 F6               [ 1]  963 	ld	a, (x)
      000453 14 01            [ 1]  964 	and	a, (0x01, sp)
      000455 6B 04            [ 1]  965 	ld	(0x04, sp), a
                                    966 ;	lib/stm8s_uart1.c: 667: if (((UART1->SR & itpos) != (uint8_t)0x00) && enablestatus)
      000457 AE 52 30         [ 2]  967 	ldw	x, #0x5230
      00045A F6               [ 1]  968 	ld	a, (x)
      00045B 14 03            [ 1]  969 	and	a, (0x03, sp)
      00045D 4D               [ 1]  970 	tnz	a
      00045E 27 07            [ 1]  971 	jreq	00110$
      000460 0D 04            [ 1]  972 	tnz	(0x04, sp)
      000462 27 03            [ 1]  973 	jreq	00110$
                                    974 ;	lib/stm8s_uart1.c: 670: pendingbitstatus = SET;
      000464 A6 01            [ 1]  975 	ld	a, #0x01
                                    976 ;	lib/stm8s_uart1.c: 675: pendingbitstatus = RESET;
      000466 21                     977 	.byte 0x21
      000467                        978 00110$:
      000467 4F               [ 1]  979 	clr	a
      000468                        980 00118$:
                                    981 ;	lib/stm8s_uart1.c: 680: return  pendingbitstatus;
      000468 5B 05            [ 2]  982 	addw	sp, #5
      00046A 81               [ 4]  983 	ret
                                    984 ;	lib/stm8s_uart1.c: 708: void UART1_ClearITPendingBit(UART1_IT_TypeDef UART1_IT)
                                    985 ;	-----------------------------------------
                                    986 ;	 function UART1_ClearITPendingBit
                                    987 ;	-----------------------------------------
      00046B                        988 _UART1_ClearITPendingBit:
                                    989 ;	lib/stm8s_uart1.c: 712: if (UART1_IT == UART1_IT_RXNE)
      00046B 1E 03            [ 2]  990 	ldw	x, (0x03, sp)
      00046D A3 02 55         [ 2]  991 	cpw	x, #0x0255
      000470 26 05            [ 1]  992 	jrne	00102$
                                    993 ;	lib/stm8s_uart1.c: 714: UART1->SR = (uint8_t)~(UART1_SR_RXNE);
      000472 35 DF 52 30      [ 1]  994 	mov	0x5230+0, #0xdf
      000476 81               [ 4]  995 	ret
      000477                        996 00102$:
                                    997 ;	lib/stm8s_uart1.c: 719: UART1->CR4 &= (uint8_t)~(UART1_CR4_LBDF);
      000477 AE 52 37         [ 2]  998 	ldw	x, #0x5237
      00047A F6               [ 1]  999 	ld	a, (x)
      00047B A4 EF            [ 1] 1000 	and	a, #0xef
      00047D F7               [ 1] 1001 	ld	(x), a
      00047E 81               [ 4] 1002 	ret
                                   1003 	.area CODE
                                   1004 	.area INITIALIZER
                                   1005 	.area CABS (ABS)
